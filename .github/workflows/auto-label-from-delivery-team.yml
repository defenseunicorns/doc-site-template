name: Label Delivery Team Issues

on:
  issues:
    types: [opened]

jobs:
  assign-labels:
    runs-on: ubuntu-latest

    steps:
      - name: Get Team Members
        id: team
        uses: actions/github-script@e69ef5462fd455e02edcaf4dd7708eda96b9eda0 # v7.0.0
        with:
          retries: 3
          github-token: ${{ secrets.AUTOLABEL_TOKEN }}
          script: |
            const team_slug = "delivery";
            const org = context.repo.owner;
            let team_members = [];
            for await (const response of github.paginate.iterator(github.rest.teams.listMembersInOrg, {
              org: org,
              team_slug: team_slug
            })) {
              team_members = team_members.concat(response.data.map(user => user.login));
            }
            return team_members;

      - name: Assign Label
        uses: actions/github-script@e69ef5462fd455e02edcaf4dd7708eda96b9eda0 # v7.0.0
        with:
          retries: 3
          script: |
            const issue_creator = context.payload.sender.login;
            const team_members = ${{ steps.team.outputs.result }};
            if (team_members.includes(issue_creator)) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['mission-validated'],
              });
            } else {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['needs-triage', 'community'],
              });
            }
